buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "${mod_version}"
group= "com.whammich.roadblock" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "roadblock-${minecraft_version}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
	runDir = "run"
	replaceIn "Reference.java"
    replace "@VERSION@", project.version
}

repositories {
    maven { url = "http://coloredlightscore.us.to/maven/chisel-2-dev/" }
	maven { url = "http://tehnut.info/maven/" } 
	
	ivy {
		name "Botania"
        artifactPattern "http://botaniamod.net/files/deobf/[module] r[revision]-deobf.[ext]"
    }
	ivy {
		name "Baubles"
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-deobf-1.7.10-[revision].[ext]"
    }
}

dependencies {
	compile "com.cricketcraft.chisel:Chisel2:${chisel_version}:deobf"
	compile "com.whammich.sstow:SoulShards-TOW:${minecraft_version}-${sstow_version}:deobf"
	compile name: 'Botania', version: "${botania_version}", ext: 'jar'
	compile name: 'Baubles', version: "${baubles_version}", ext: 'jar'
	compile fileTree(dir: 'libs', include: '*.jar')
	compile fileTree(dir: 'Libraries', include: '*.jar')
}

processResources{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Create deobf dev jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}